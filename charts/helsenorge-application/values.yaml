# -- Overrider navn på chart. Beholder release-navnet
nameOverride: ""
# -- Overrider navn på chart. 
fullnameOverride: ""
# -- Hentes fra Chart.Maintainers[0].name (Chart.yaml) - Kan ovverides ved behov, også globalt.
teamOvveride: ""
# -- Muligjor tokenvalidering i applikasjonen ved å tilgjengeliggjøre sertifikatet i podden.
enableTokenValidation: true
# -- Informasjon om tokenvalideringssertifikatet i miljoet.
# @default -- {}
tokenValidation:
  # -- Navn på filen som inneholder sertifikatet
  filename: helsenorge_sikkerhet_public.pem
  # -- Path til hvor sertifikatet mountes i pod'en
  volumeMount: /tokevalidation-cert
  # -- Navn på secret som inneholder sertifikatet.  Denne må eksistere i namespace fra før.
  secretName: certificate.helsenorge-sikkerhet.public
  # -- Image som brukes som init-container for installasjon av sertifikat
  image: helsenorge.azurecr.io/utils/certificate-tool:2.0.7
  # -- Image pull policy for init-container
  imagePullPolicy: IfNotPresent
# -- Path til certificate-store som sertifikater installeres til ved bruk av [certificate tool](https://github.com/gsoft-inc/dotnet-certificate-tool). Fallback plassering for [CurrentUser\My](https://docs.microsoft.com/nb-no/dotnet/standard/security/cross-platform-cryptography#the-my-store) på linux. 
certificateStore: root/.dotnet/corefx/cryptography/x509stores/my  
# -- Rabbitmq-settings
# @default -- {...}
rabbitmq:
  # -- Hvis 'true' så opprettes det en rabbitmq-bruker for applikasjonene. Fungerer kun i miljøer der rabbitmq styres av [rabbitmq-topology-operator](https://www.rabbitmq.com/kubernetes/operator/using-topology-operator.html#non-operator). 
  # Hvis satt til false så må 'user' og 'password' settes.
  createUser: true
  # -- Bruker - Kun angi hvis du ønsker å overskrive at brukernavn blir satt til det samme som applikasjonsnavnet
  # Eks: configuration-internalapi
  user: ""
  # -- Passord - Brukes kun hvis generate user er satt til 'false'
  password: ""
  # -- Navn på virtual host
  virtualHost: internal.messaging.helsenorge.no
  # -- Navn på cluster, brukes til å sette opp adressen til rabbitmq, så må være det samme som hostnavnet
  clusterName: rabbitmq
  # -- Port til amqp-endepunktet til rabbitmq
  port: 5671
  # -- Kommunikasjon mellom client og rabbitmq går over ssl
  useSsl: true
  # -- Skal meldinger som går mellom client og rabbitmq krypteres
  encryptMessages: true
logging:
  # Area settes automatisk til samme som Release.Name. Denne verdien kan ovverides her.
  # Release.Name skal alltid være det samme som navnet på løsningsområde som deployes.
  areaOvveride: ""
  # -- Setter SourceType på loggene i splunk
  sourceType: kube:Helsenorge
# -- Dns-sonen til miljøet.
dnsZone: "helsenorge.utvikling"
# -- Image referanse: registry/repository:tag
image: 
# -- Pull-policy satt på imaget
imagePullPolicy: IfNotPresent 
# -- Ovveride default container command - defaulter til "dotnet" - Les mer om Command and Arguments for kontainere [her](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/).
# Eks for å kjøre en dotnet applikasjon ```dotnet myassembly.dll``` bruk command:
# ```
# command: ["dotnet"]
# ```
# og args
# ```
# args: ["myassembly.dll"]
# ```
command: []
# -- Ovveride default container args - Les mer om Command and Arguments for kontainere [her](https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/). Les mer under ```command```.
args: []
# -- Antall containere som kjører apiet. Disse lastbalanseres automatisk, men flere containere krever mer ressurser av clusteret. Bør overstyrers i høyere miljøer.
replicaCount: 1
livenessProbe:
  # -- [Liveness probe](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#types-of-probe) indikerer om containeren kjører ved å gjøre et http kall mot gitt path.
  path: "/api/ping"
readinessProbe:
   # -- [Readiness probe](https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#types-of-probe) indikerer om containeren er klar for å motta requests ved å gjøre et http kall mot gitt path
  path: "/health"
# -- Kubernetes service-konto. Les mer [her](https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/).
# Navn settes til det samme som applikasjon.
serviceAccount:
  # -- Spesifiserer om en service-konto skal opprettes.
  create: true
  # -- Spesifikke annoteringer som skal legges til servicekontoen (todo).
  annotations: {}
  # -- Legger på egne image pull secrets på service accounten. Gjør det mulig for pods som kjører under denne service-accounten å få tilgang til private registry
  imagePullSecrets: 
    - helsenorge-pull-secret
# -- Servicen som eksponerer apiet ut i klusteret.
# @default -- Se verdier under
service:  
    # -- Type service.
    # Les mer [her](https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types).
    type: "ClusterIP" 
    # -- Port servicen eksponerer apiet på ut i clusteret.
    port: 80 
    # -- Ingress annoteringer, skrives som key-value par. 
    annotations: {}
# -- Beskriver hvordan komponenten skal eksponeres ut av clustert, slik at komponenten kan konsumeres av ressurser utenfor clusteret. 
# Les mer [her](https://kubernetes.io/docs/concepts/services-networking/ingress/).
# @default -- Se verdier under
ingress: 
  # -- Bestemmer om en ingress skal opprettes eller ikke, false betyr at ingen ingress opprettes og komponenten kan ikke nås utenfra clusteret.
  create: true
  # -- Bestemmer hvilket hostname ingress skal lytte på. Eks configuration-internalapi-mas01.helsenorge.utvikling.
  # Trenger ikke overstyres med mindre man skal teste noe spesielt
  # @default -- genereres basert på apinavn og miljo
  hostname: ""
  # -- Spesifiserer navn på secret som inneholder tls-sertifikatet som skal benyttes på endepunktet. 
  # Vil være nødvendig å angi hvis tjenesten skal eksponeres på et annet domene enn standard og eksponeres på port 443, typisk hvis hostname er angitt.
  # @default -- Hvis ikke angitt så brukes default
  tlsSecret: ""
  # -- Spesifiserer hvilken nginx-controller som er i bruk
  # -- Ingress annoteringer, skrives som key-value par. 
  # For en full liste av mulige ingress annoteringer, les [her](https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md)
  annotations: {}
  # dns.alpha.kubernetes.io/hostname: test.test.no
  # -- Navnet på implementasjonen av ingress-controlleren som skal benyttes.
  className: "nginx"
# -- Beskriver hvor mye ressurser en pod som kjører koden skal få tilgang til.
# Les mer om konseptene [her](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#requests-and-limits).
# @default -- {}
resources:
  # -- Hvor mye ressurser er poden begrenset til.
  # @default -- Se verdier under
  limits:
    # -- [Limits and requests for CPU resources are measured in cpu units. One cpu, in Kubernetes, is equivalent to 1 vCPU/Core for cloud providers and 1 hyperthread on bare-metal Intel processors](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-cpu).
    cpu: 200m
    # -- [Limits and requests for memory are measured in bytes.](https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#meaning-of-memory).
    memory: 128Mi
  # -- Hvor mye ressurser poden minimum trenger.
  # @default -- Se verdier under
  requests:
    # -- Samme som under resources.limits.
    cpu: 100m
    # -- Samme som under resources.limits.
    memory: 128Mi
# -- Map av environment variabler som tilgjengeliggjøres for podden. Se [her](env-eksempler) for eksempler.
extraEnvVars: {}
# -- Liste over eksisterende config-maps der innholdet lastes inn i podden som envVars. Se [her](#envfrom-configmap-eksempler) for eksempler. 
extraEnvVarsCM: []
# -- Liste over eksisterende secrets der innholdet lastes inn i podden som envVars. Se [her](#envfrom-secret-eksempler) for eksempler.
extraEnvVarsSecret: []
# -- Liste over extra volumes som skal tilgjengeliggjøres til deploymenten. Se [her](#volume-og-volumemount-eksempler) for eksempler.
extraVolumes: []
# -- Liste over extra volume mounts som skal mountes til podden. Se [her](#volume-og-volumemount-eksempler) for eksempler.
extraVolumeMounts: []
# -- Debugmodus - Skrur på debug-modus i miljøet. Krever at debug.dll config-map er tilgjengelig i miljøet.
isDebugEnvironment: false
# -- Debugmodus - Settings for debugmodus
# @default -- {}
debug:  
  # -- Path til hvor debug-fil mountes i pod'en.
  configShare: /config-share/
  # -- Navn på config-map som inneholder debug-dll. Denne må eksistere i namespace fra før.
  debugConfigMap: debug-environment
# -- Gir pod'en tilgang til felles-config allerede tilgjengeligjort i miljoet. Dette er typisk config som kreves av felles-pakkene.
useSharedConfig: true
# -- Legger inn hostfil innslag i pod'ens /etc/host. Se [her](#hostalias-eksempler) for eksempler.
hostAliases: []




